- name: Install Helm | Check
  ansible.builtin.command: "{% raw %}helm version --template='{{.Version}}'{% endraw %}"
  ignore_errors: yes
  changed_when: False
  register: helm_check_bin

- vars:
    helm:
      version:
        # https://github.com/helm/helm/releases
        expected: "v3.10.0"
        actual: "{{ helm_check_bin.stdout_lines | first | default('') }}"
    helm_temp_dir: "{{ playbook_dir }}/temp/helm-{{ helm.version.expected }}"
  block:
  - name: Install Helm | Check
    debug:
      var: helm.version

  - name: Install Helm | Download
    ansible.builtin.get_url:
      url: "https://get.helm.sh/helm-{{ helm.version.expected }}-linux-amd64.tar.gz"
      dest: "{{ helm_temp_dir }}.tar.gz"
    when: helm.version.expected != helm.version.actual

  - name: "Install Helm | Extract"
    ansible.builtin.file:
      path: "{{ helm_temp_dir }}"
      state: directory
    when: helm.version.expected != helm.version.actual

  - name: "Install Helm | Extract"
    ansible.builtin.unarchive:
      src: "{{ helm_temp_dir }}.tar.gz"
      dest: "{{ helm_temp_dir }}"
      remote_src: yes
    when: helm.version.expected != helm.version.actual

  - name: "Install Helm | Install"
    ansible.builtin.copy:
      src: "{{ helm_temp_dir }}/linux-amd64/helm"
      dest: "~/.local/bin/helm"
      mode: u=rwx,g=rx,o=
    when: helm.version.expected != helm.version.actual

  - name: "Install Helm | Clear"
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    loop:
    - "{{ helm_temp_dir }}.tar.gz"
    - "{{ helm_temp_dir }}"

  - name: "Install Helm | bash_completion"
    ansible.builtin.copy:
      src: ./files/helm/bash_completion.shrc
      dest: ~/.local/etc/bash_completion.d/helm
