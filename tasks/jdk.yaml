- vars:
    jdk_major: "{{ jdk.id | regex_replace('^([0-9]+)[.].*$','\\1') }}"
    jdk_archive: "./temp/jdk-temurin-{{ jdk.id }}.tar.gz"
    jdk_home: "{{ jdk_homeroot }}/jdk-{{ jdk.id }}"
  block:
  - name: "Install JDK {{ jdk.id }} | Check"
    ansible.builtin.stat:
      path: "{{ jdk_home }}"
    register: jdk_dir_check

  - name: "Install JDK {{ jdk.id }} | Download"
    ansible.builtin.get_url:
      url: "https://github.com/adoptium/temurin{{ jdk_major }}-binaries/releases/download/jdk-{{ jdk.id | urlencode }}/OpenJDK{{ jdk_major }}U-jdk_x64_linux_hotspot_{{ jdk.id | regex_replace('[+]', '_') }}.tar.gz"
      dest: "{{ jdk_archive }}"
      mode: '0640'
    when: jdk_dir_check.stat.exists == False

  - name: "Install JDK {{ jdk.id }} | Extract"
    become: yes
    ansible.builtin.unarchive:
      src: "{{ jdk_archive }}"
      dest: "{{ jdk_homeroot }}"
    when: jdk_dir_check.stat.exists == False

  - name: "Install JDK {{ jdk.id }} | Clear"
    ansible.builtin.file:
      path: "{{ jdk_archive }}"
      state: absent
    when: jdk_dir_check.stat.exists == False

  - name: "Install JDK {{ jdk.id }} | Alias"
    become: yes
    ansible.builtin.file:
      path: "{{ jdk_home | dirname }}/{{ item }}"
      src: "{{ jdk_home | basename }}"
      state: link
    loop: "{{ jdk.aliases | default([]) }}"
